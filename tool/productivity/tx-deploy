#!/bin/bash

if [ "$1" = "--help" -o $# != 0 -a $# != 2 ]; then
    echo "usage: $0 [website-domain] [api-domain]"
    echo "Deploys the current built traxler code."
    echo "Traxler is set up to host its website at website-domain and api at api-domain."
    echo "Include both or neither argument."
    exit 1
fi

if [ $# == 0 ]; then
    website_domain=stage.nassau.network
    api_domain=stage.api.nassau.network
else
    website_domain="$1"
    api_domain="$2"
fi

# Source all of the scripts in the include directory.
for script in $TOOL_DIR/include/*.sh; do
    source $script;
done

# Deploy the server infrastructure. --------------------------------------------

echo_magenta Deploying server...

sam deploy --stack-name traxler                                             \
    --region us-east-1                                                      \
    --s3-bucket aws-sam-cli-managed-default-samclisourcebucket-v0oc8fkeo92l \
    --capabilities CAPABILITY_IAM                                           \
    --parameter-overrides                                                   \
    WebsiteDomain=$website_domain \
    ApiDomain=$api_domain \
    DomainCertificate=arn:aws:acm:us-east-1:322430506657:certificate/26456d0e-4083-4aef-a114-5070bf29e6a8 \
    ImageBucketName=$TX_S3_IMAGE_BUCKET \
    WebsiteBucketName=$TX_S3_WEBSITE_BUCKET \
    StudentTableName=$TX_DYNAMODB_STUDENT_TABLE

# Deploy the static website. ---------------------------------------------------

echo_magenta Deploying website...

cat << EOF > $STATIC_DIR/js/constants.js
// This is a generated file. Don't touch.
const websiteDomain='$website_domain'
const apiDomain='$api_domain'
EOF

# Copy the static files over to the S3 bucket, deleting any remote files that
# are no longer needed.
aws s3 sync $STATIC_DIR s3://$TX_S3_WEBSITE_BUCKET --delete

# Copying the files isn't enough. CloudFront caches the website files from the
# S3 bucket origin. Invalidate the CloudFront cache.
echo_magenta Invalidating website cache...

distribution_id=$(aws cloudformation describe-stacks --stack-name traxler                      \
                    --region us-east-1                                                         \
                    --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontWebsiteId`].OutputValue' \
                    --output text)
aws cloudfront create-invalidation --distribution-id $distribution_id --paths "/*"
